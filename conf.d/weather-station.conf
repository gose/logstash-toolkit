input {
# file {
#   start_position => "beginning"
#   path => "/Users/gose/elastic/logstash-toolkit/data/weather-station.log"
#   sincedb_clean_after => 0
# }
  s3 {
    #prefix => "weather-station/2021-08-16/14"
    prefix => "weather-station/2021-08-"
    temporary_directory => "${S3_TEMP_DIR}/reindex"
    access_key_id => "${S3_ACCESS_KEY}"
    secret_access_key => "${S3_SECRET_KEY}"
    endpoint => "${S3_ENDPOINT}"
    bucket => "${S3_BUCKET}"
    watch_for_new_files => false
    sincedb_path => "/dev/null"
    codec => json_lines
    additional_settings => {
      force_path_style => true
      follow_redirects => false
    }
  }
}
filter {
  if [message] =~ /^\[/ {
    json {
      source => "message"
      target => "tmp"
    }
  } else {
    drop { }
  }
  if "_jsonparsefailure" in [tags] {
    drop { }
  }
  mutate {
    remove_field => ["message"]
  }
  mutate {
    add_field => {
      "message" => "%{[tmp][0]}"
    }
  }
  json {
    source => "message"
  }
  ruby {
    # Promote the keys inside lastData to root, then remove lastData
    code => '
      event.get("lastData").each { |k, v|
        event.set(k,v)
      }
      event.remove("lastData")
    '
  }
  date {
    match => ["date", "ISO8601"]
  }
  mutate {
    remove_field => ["message", "tmp", "path", "host", "macAddress", "date"]
  }
}
output {
# stdout { }
# stdout { codec => json }
# stdout { codec => json_lines }
# stdout { codec => dots }
  elasticsearch {
    index => "weather-station-%{+YYYY.MM.dd}"
    hosts => "${ES_ENDPOINT}"
    user => "${ES_USERNAME}"
    password => "${ES_PASSWORD}"
  }
}
